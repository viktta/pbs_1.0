{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victor/Documents/Projects/pbs_1.0/pbs_frontend/src/Components/routes/pv.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ReplyPostView from './prv';\n\nclass PostView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url_id: props.match.params.id,\n      p_d_id: [],\n      title: props.match.params.title,\n      id: localStorage.getItem(\"user_id\"),\n      user_p_id: props.match.params.user,\n      user_p_username: [],\n      reply: true\n    };\n  }\n\n  componentDidMount() {\n    const user = this.state.user_p_id;\n    const title = this.state.title;\n    localStorage.setItem(\"uv_o\", true);\n    axios.get(`http://localhost:8000/api/upv/${title}`).then(res => {\n      this.setState({\n        p_d_id: [res.data]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(`http://localhost:8000/api/uv/${user}`).then(res => {\n      this.setState({\n        user_p_username: res.data.username\n      });\n    });\n  }\n\n  render() {\n    const url_id = this.state.url_id;\n    const p_d_id = this.state.p_d_id;\n    const idp = this.state.url_id;\n    const username = this.state.user_p_username;\n    const u = p_d_id.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"title: \", i.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"body: \", i.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, i.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    });\n    const reply = this.state.reply;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [url_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pv-post\",\n        children: u\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"username: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/rp/${this.state.url_id}/${this.state.title}/`,\n          state: {\n            getp: idp\n          }\n        },\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), reply === true ? /*#__PURE__*/_jsxDEV(ReplyPostView, {\n        id: this.state.url_id,\n        title: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostView;","map":{"version":3,"sources":["/home/victor/Documents/Projects/pbs_1.0/pbs_frontend/src/Components/routes/pv.js"],"names":["React","Component","axios","Link","ReplyPostView","PostView","constructor","props","state","url_id","match","params","id","p_d_id","title","localStorage","getItem","user_p_id","user","user_p_username","reply","componentDidMount","setItem","get","then","res","setState","data","catch","err","console","log","username","render","idp","u","map","i","body","pathname","getp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ReplyPostView from './prv';\n\nclass PostView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url_id: props.match.params.id,\n      p_d_id: [],\n      title: props.match.params.title,\n      id: localStorage.getItem(\"user_id\"),\n      user_p_id: props.match.params.user,\n      user_p_username: [],\n      reply: true,\n    };\n  }\n\n  componentDidMount() {\n    const user = this.state.user_p_id;\n    const title = this.state.title;\n    localStorage.setItem(\"uv_o\", true);\n    axios\n      .get(`http://localhost:8000/api/upv/${title}`)\n      .then((res) => {\n        this.setState({ p_d_id: [res.data] });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios.get(`http://localhost:8000/api/uv/${user}`).then((res) => {\n      this.setState({ user_p_username: res.data.username });\n    });\n  }\n\n  render() {\n    const url_id = this.state.url_id;\n    const p_d_id = this.state.p_d_id;\n    const idp = this.state.url_id;\n    const username = this.state.user_p_username;\n\n    const u = p_d_id.map((i) => {\n      return (\n        <div key={i.id}>\n          <h1>title: {i.title}</h1>\n          <h1>body: {i.body}</h1>\n        </div>\n      );\n    });\n\n    const reply = this.state.reply;\n\n    return (\n      <div>\n        {url_id ? <div className='pv-post'>{u}</div> : <h1>Nope</h1>}\n        <h1>username: {username}</h1>\n        <Link\n          to={{\n            pathname: `/rp/${this.state.url_id}/${this.state.title}/`,\n            state: { getp: idp },\n          }}\n        >\n          Reply\n        </Link>\n        {reply === true ? <ReplyPostView id={this.state.url_id} title={this.state.title}/> : <h1>.</h1>}\n      </div>\n    );\n  }\n}\n\nexport default PostView;\n"]},"metadata":{},"sourceType":"module"}