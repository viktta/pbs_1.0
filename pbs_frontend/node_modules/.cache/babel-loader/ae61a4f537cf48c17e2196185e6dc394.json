{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aleor\\\\Documents\\\\Projects\\\\pbs_1.0\\\\pbs_frontend\\\\src\\\\Components\\\\routes\\\\pv.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PostView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url_id: props.match.params.id,\n      p_d_id: [],\n      title: props.match.params.title\n    };\n  }\n\n  componentDidMount() {\n    const title = this.state.title;\n    axios.get(`http://localhost:8000/api/upv/${title}`).then(res => {\n      this.setState({\n        p_d_id: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const url_id = this.state.url_id;\n    const p_d_id = this.state.p_d_id;\n    const u = p_d_id.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: i.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: url_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"title \", u]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostView;","map":{"version":3,"sources":["C:/Users/aleor/Documents/Projects/pbs_1.0/pbs_frontend/src/Components/routes/pv.js"],"names":["React","Component","axios","PostView","constructor","props","state","url_id","match","params","id","p_d_id","title","componentDidMount","get","then","res","setState","data","catch","err","console","log","render","u","map","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EADhB;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,KAAK,EAAEP,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBG;AAHf,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMD,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAzB;AAEAV,IAAAA,KAAK,CACFY,GADH,CACQ,iCAAgCF,KAAM,EAD9C,EAEGG,IAFH,CAESC,GAAD,IAAS;AACb,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,GAAG,CAACE;AAAd,OAAd;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMhB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,UAAMI,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAA1B;AAEA,UAAMa,CAAC,GAAGb,MAAM,CAACc,GAAP,CAAWC,CAAC,IAAI;AACxB,0BAAO;AAAA,kBAAKA,CAAC,CAACd;AAAP;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFS,CAAV;AAIA,wBACE;AAAA,gBACGL,MAAM,gBACL;AAAA,+BACE;AAAA,+BAAWiB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADK,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1C8B;;AA6CjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass PostView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url_id: props.match.params.id,\r\n      p_d_id: [],\r\n      title: props.match.params.title,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const title = this.state.title;\r\n\r\n    axios\r\n      .get(`http://localhost:8000/api/upv/${title}`)\r\n      .then((res) => {\r\n        this.setState({ p_d_id: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const url_id = this.state.url_id;\r\n    const p_d_id = this.state.p_d_id;\r\n\r\n    const u = p_d_id.map(i => {\r\n      return <h1>{i.title}</h1>\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        {url_id ? (\r\n          <div>\r\n            <h1>title {u}</h1>\r\n          </div>\r\n        ) : (\r\n          <h1>Nope</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostView;\r\n"]},"metadata":{},"sourceType":"module"}