{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aleor\\\\Documents\\\\Projects\\\\pbs_1.0\\\\pbs_frontend\\\\src\\\\Components\\\\routes\\\\pv.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ReplyPostView from \"./prv\";\nimport \"../../styles/pv.css\";\n\nclass PostView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url_id: props.match.params.id,\n      p_d_id: [],\n      title: props.match.params.title,\n      id: localStorage.getItem(\"user_id\"),\n      user_p_id: props.match.params.user,\n      user_p_username: [],\n      reply: true\n    };\n  }\n\n  componentDidMount() {\n    const user = this.state.user_p_id;\n    const title = this.state.title;\n    localStorage.setItem(\"uv_o\", true);\n    axios.get(`http://localhost:8000/api/upv/${title}`).then(res => {\n      this.setState({\n        p_d_id: [res.data]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(`http://localhost:8000/api/uv/${user}`).then(res => {\n      this.setState({\n        user_p_username: res.data.username\n      });\n    });\n  }\n\n  render() {\n    const url_id = this.state.url_id;\n    const p_d_id = this.state.p_d_id;\n    const idp = this.state.url_id;\n    const username = this.state.user_p_username;\n    const u = p_d_id.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container-pv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pv-title\",\n          children: i.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pv-h1-username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pv-body\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            readOnly: true,\n            children: i.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/rp / ${this.state.url_id}/ ${this.state.title} / `,\n            state: {\n              getp: idp\n            }\n          },\n          className: \"pv-link\",\n          children: \" Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, i.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    });\n    const reply = this.state.reply;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [url_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pv-post\",\n        children: u\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 56\n      }, this), reply === true ? /*#__PURE__*/_jsxDEV(ReplyPostView, {\n        id: this.state.url_id,\n        title: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" . \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostView;","map":{"version":3,"sources":["C:/Users/aleor/Documents/Projects/pbs_1.0/pbs_frontend/src/Components/routes/pv.js"],"names":["React","Component","axios","Link","ReplyPostView","PostView","constructor","props","state","url_id","match","params","id","p_d_id","title","localStorage","getItem","user_p_id","user","user_p_username","reply","componentDidMount","setItem","get","then","res","setState","data","catch","err","console","log","username","render","idp","u","map","i","body","pathname","getp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReplyPostView from \"./prv\";\r\nimport \"../../styles/pv.css\";\r\n\r\nclass PostView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      url_id: props.match.params.id,\r\n      p_d_id: [],\r\n      title: props.match.params.title,\r\n      id: localStorage.getItem(\"user_id\"),\r\n      user_p_id: props.match.params.user,\r\n      user_p_username: [],\r\n      reply: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.state.user_p_id;\r\n    const title = this.state.title;\r\n    localStorage.setItem(\"uv_o\", true);\r\n\r\n    axios\r\n      .get(`http://localhost:8000/api/upv/${title}`)\r\n\r\n      .then((res) => {\r\n        this.setState({\r\n          p_d_id: [res.data],\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios.get(`http://localhost:8000/api/uv/${user}`).then((res) => {\r\n      this.setState({ user_p_username: res.data.username });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const url_id = this.state.url_id;\r\n    const p_d_id = this.state.p_d_id;\r\n    const idp = this.state.url_id;\r\n    const username = this.state.user_p_username;\r\n\r\n    const u = p_d_id.map((i) => {\r\n      return (\r\n        <div key={i.id} className=\"grid-container-pv\">\r\n          <h1 className=\"pv-title\">{i.title}</h1>\r\n          <h1 className=\"pv-h1-username\">{username}</h1>\r\n          <h1 className=\"pv-body\"><textarea readOnly>{i.body}</textarea></h1>\r\n          <Link to={{ \r\n           pathname: `/rp / ${this.state.url_id}/ ${this.state.title} / `,\r\n           state: {\r\n           getp: idp,\r\n          },}} className=\"pv-link\"> Reply \r\n          </Link>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const reply = this.state.reply;\r\n\r\n    return (\r\n      <div>\r\n        {url_id ? <div className=\"pv-post\">{u}</div> : <h1>Nope</h1>}\r\n        {reply === true ? (\r\n          <ReplyPostView id={this.state.url_id} title={this.state.title} />\r\n        ) : (\r\n          <h1> . </h1>\r\n        )}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostView;\r\n"]},"metadata":{},"sourceType":"module"}