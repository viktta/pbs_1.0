{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aleor\\\\Documents\\\\Projects\\\\pbs_1.0\\\\pbs_frontend\\\\src\\\\Components\\\\routes\\\\gposts.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction GetPosts() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(() => {\n    _s();\n\n    const [pd, setPd] = useState({});\n    const access = Cookies.get(\"access_token\");\n\n    const getPosts = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/ucpv/\", {\n          headers: {\n            Authorization: \"JWT \" + access\n          }\n        });\n        setPd(res.data);\n      } catch (err) {\n        alert(err);\n      }\n\n      getPosts();\n    };\n  }, \"0VN0eEV8OsnYivxuQ9sTkMxpsd4=\"), []);\n\n  const pt = () => {\n    pd.map(items => {\n      /*#__PURE__*/\n      _jsxDEV(Link, {\n        to: \"/pv/\",\n        id: items.id,\n        children: items.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GetPosts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GetPosts;\nexport default GetPosts();\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPosts\");","map":{"version":3,"sources":["C:/Users/aleor/Documents/Projects/pbs_1.0/pbs_frontend/src/Components/routes/gposts.js"],"names":["React","useEffect","useState","Cookies","axios","Link","GetPosts","pd","setPd","access","get","getPosts","res","headers","Authorization","data","err","alert","pt","map","items","id","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAClBL,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACd,UAAM,CAACM,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;AACA,UAAMO,MAAM,GAAGN,OAAO,CAACO,GAAR,CAAY,cAAZ,CAAf;;AACA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMR,KAAK,CAACM,GAAN,CAAU,iCAAV,EAA6C;AAC7DG,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE,SAASL;AADjB;AADoD,SAA7C,CAAlB;AAKAD,QAAAA,KAAK,CAACI,GAAG,CAACG,IAAL,CAAL;AACD,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,QAAAA,KAAK,CAACD,GAAD,CAAL;AACD;;AACDL,MAAAA,QAAQ;AACT,KAZD;AAaD,GAhBQ,mCAgBN,EAhBM,CAAT;;AAiBA,QAAMO,EAAE,GAAG,MAAM;AACfX,IAAAA,EAAE,CAACY,GAAH,CAAQC,KAAD,IAAW;AAChB;AAAA,cAAC,IAAD;AAAM,QAAA,EAAE,EAAE,MAAV;AAAkB,QAAA,EAAE,EAAEA,KAAK,CAACC,EAA5B;AAAA,kBACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA;AAGD,KAJD;AAKD,GAND;;AAQA,sBACE;AAAA,2BACE;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA/BQZ,Q;;KAAAA,Q;AAiCT,eAAeA,QAAQ,EAAvB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction GetPosts() {\r\n  useEffect(() => {\r\n    const [pd, setPd] = useState({});\r\n    const access = Cookies.get(\"access_token\");\r\n    const getPosts = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:8000/api/ucpv/\", {\r\n          headers: {\r\n            Authorization: \"JWT \" + access,\r\n          },\r\n        });\r\n        setPd(res.data);\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n      getPosts();\r\n    };\r\n  }, []);\r\n  const pt = () => {\r\n    pd.map((items) => {\r\n      <Link to={\"/pv/\"} id={items.id}>\r\n        {items.title}\r\n      </Link>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>{pt}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetPosts();\r\n"]},"metadata":{},"sourceType":"module"}