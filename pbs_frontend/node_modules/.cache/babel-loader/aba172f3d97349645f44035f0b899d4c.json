{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aleor\\\\Documents\\\\Projects\\\\pbs_1.0\\\\pbs_frontend\\\\src\\\\Components\\\\routes\\\\pv.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PostView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      p_data: [],\n      url_id: \"\",\n      p_d_id: [{}],\n      title: \"\"\n    };\n    this.postR = this.postR.bind(this);\n  }\n\n  componentDidMount() {\n    const url_id = this.state.url_id;\n    axios.get(\"http://localhost:8000/api/upv/\").then(res => {\n      this.setState({\n        p_data: res.data\n      });\n      const id = this.props.match.params.id;\n      const title = this.props.match.params.title;\n      this.setState({\n        url_id: id,\n        title: title\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(`http://localhost:8000/api/upv/${url_id}`).then(res => {\n      this.setState({\n        p_d_id: res.data\n      });\n    });\n  }\n\n  postR(e) {\n    const p_d_id = this.state.p_d_id;\n    const url_id = this.state.url_id;\n    const u = p_d_id.map(i => {\n      for (url_id in i.id) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: i.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: url_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"title \", this.postR]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostView;","map":{"version":3,"sources":["C:/Users/aleor/Documents/Projects/pbs_1.0/pbs_frontend/src/Components/routes/pv.js"],"names":["React","Component","axios","PostView","constructor","props","state","p_data","url_id","p_d_id","title","postR","bind","componentDidMount","get","then","res","setState","data","id","match","params","catch","err","console","log","e","u","map","i","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,MAAM,EAAE,CAAC,EAAD,CAHG;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAML,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAA1B;AACAN,IAAAA,KAAK,CACFY,GADH,CACO,gCADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,WAAKC,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAES,GAAG,CAACE;AAAd,OAAd;AACA,YAAMC,EAAE,GAAG,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBF,EAAnC;AACA,YAAMT,KAAK,GAAG,KAAKL,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBX,KAAtC;AACA,WAAKO,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEW,EAAV;AAAcT,QAAAA,KAAK,EAAEA;AAArB,OAAd;AACD,KAPH,EAQGY,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAVH;AAWArB,IAAAA,KAAK,CAACY,GAAN,CAAW,iCAAgCN,MAAO,EAAlD,EAAqDO,IAArD,CAA2DC,GAAD,IAAS;AACjE,WAAKC,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEO,GAAG,CAACE;AAAd,OAAd;AACD,KAFD;AAGD;;AAEDP,EAAAA,KAAK,CAACe,CAAD,EAAI;AACP,UAAMjB,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAA1B;AACA,UAAMD,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAA1B;AAEA,UAAMmB,CAAC,GAAGlB,MAAM,CAACmB,GAAP,CAAWC,CAAC,IAAI;AACxB,WAAKrB,MAAL,IAAeqB,CAAC,CAACV,EAAjB,EAAqB;AACnB,4BAAO;AAAA,oBAAKU,CAAC,CAACnB;AAAP;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAJS,CAAV;AAKD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACGtB,MAAM,gBACL;AAAA,+BACE;AAAA,+BAAW,KAAKG,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADK,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AArD8B;;AAwDjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass PostView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      p_data: [],\r\n      url_id: \"\",\r\n      p_d_id: [{}],\r\n      title: \"\",\r\n    };\r\n    this.postR = this.postR.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url_id = this.state.url_id;\r\n    axios\r\n      .get(\"http://localhost:8000/api/upv/\")\r\n      .then((res) => {\r\n        this.setState({ p_data: res.data });\r\n        const id = this.props.match.params.id;\r\n        const title = this.props.match.params.title;\r\n        this.setState({ url_id: id, title: title });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axios.get(`http://localhost:8000/api/upv/${url_id}`).then((res) => {\r\n      this.setState({ p_d_id: res.data });\r\n    });\r\n  }\r\n\r\n  postR(e) {\r\n    const p_d_id = this.state.p_d_id;\r\n    const url_id = this.state.url_id;\r\n\r\n    const u = p_d_id.map(i => {\r\n      for (url_id in i.id) {\r\n        return <h1>{i.title}</h1>\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {url_id ? (\r\n          <div>\r\n            <h1>title {this.postR}</h1>\r\n          </div>\r\n        ) : (\r\n          <h1>Nope</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostView;\r\n"]},"metadata":{},"sourceType":"module"}