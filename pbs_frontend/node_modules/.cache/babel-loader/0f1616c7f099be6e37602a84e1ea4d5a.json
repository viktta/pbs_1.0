{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/viktta/Documents/Projects/pbs_1.0/pbs_frontend/src/user/login.jsx\";\nimport { Component } from \"react\";\nimport axiosInstance from \"../axiosApi\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      token: Cookies.get(\"refresh_token\"),\n      user_info_data: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getUserInfo = this.getUserInfo.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  getUserId(e) {\n    const token = Cookies.get(\"refresh_token\");\n    const decode = jwt_decode(token);\n    Cookies.set(\"user_id\", decode.user_id);\n  }\n\n  componentDidMount() {\n    const username = Cookies.get('username');\n\n    if (username) {//pass\n    } else {\n      this.getUserInfo();\n    }\n  }\n\n  getUserInfo(e) {\n    const id = Cookies.get(\"user_id\");\n    axios.get(\"http://127.0.0.1:8000/api/urv/\" + id).then(res => {\n      const username = res.data.map(username => {\n        return username.username;\n      });\n      const id = res.data.map(id => {\n        return id.id;\n      });\n      const password = res.data.map(password => {\n        return password.password;\n      });\n      const last_login = res.data.map(last_login => {\n        return last_login.last_login;\n      });\n      const is_superuser = res.data.map(is_superuser => {\n        return is_superuser.is_superuser;\n      });\n      const first_name = res.data.map(first_name => {\n        return first_name.first_name;\n      });\n      const last_name = res.data.map(last_name => {\n        return last_name.last_name;\n      });\n      const email = res.data.map(email => {\n        return email.email;\n      });\n      const is_staff = res.data.map(is_staff => {\n        return is_staff.is_staff;\n      });\n      const is_active = res.data.map(is_active => {\n        return is_active.is_active;\n      });\n      const date_joined = res.data.map(date_joined => {\n        return date_joined.date_joined;\n      });\n      Cookies.set(\"username\", username);\n      Cookies.set(\"password\", password);\n      Cookies.set(\"last_login\", last_login);\n      Cookies.set(\"is_superuser\", is_superuser);\n      Cookies.set(\"first_name\", first_name);\n      Cookies.set(\"last_name\", last_name);\n      Cookies.set(\"email\", email);\n      Cookies.set(\"is_staff\", is_staff);\n      Cookies.set(\"is_active\", is_active);\n      Cookies.set(\"date_joined\", date_joined);\n    }).then(() => {\n      localStorage.removeItem(\"user_id\");\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axiosInstance.post(\"/gtv/\", {\n      username: this.state.username,\n      password: this.state.password\n    }).then(result => {\n      axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + result.data.access;\n      Cookies.set(\"access_token\", result.data.access);\n      Cookies.set(\"refresh_token\", result.data.refresh, {\n        expires: 15\n      });\n    }).then(() => {\n      this.getUserId();\n    }).then(() => {}).catch(error => {\n      throw error;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Login\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            type: \"text\",\n            value: this.state.username,\n            onChange: this.handleChange,\n            placeholder: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange,\n            placeholder: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/viktta/Documents/Projects/pbs_1.0/pbs_frontend/src/user/login.jsx"],"names":["Component","axiosInstance","jwt_decode","axios","Cookies","Login","constructor","props","state","username","password","token","get","user_info_data","handleChange","bind","handleSubmit","getUserInfo","event","setState","target","name","value","getUserId","e","decode","set","user_id","componentDidMount","id","then","res","data","map","last_login","is_superuser","first_name","last_name","email","is_staff","is_active","date_joined","localStorage","removeItem","catch","err","console","log","preventDefault","post","result","defaults","headers","access","refresh","expires","error","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport axiosInstance from \"../axiosApi\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      token: Cookies.get(\"refresh_token\"),\n      user_info_data: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getUserInfo = this.getUserInfo.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  getUserId(e) {\n    const token = Cookies.get(\"refresh_token\");\n    const decode = jwt_decode(token);\n    Cookies.set(\"user_id\", decode.user_id);\n  }\n\n  componentDidMount() {\n    const username = Cookies.get('username');\n    if (username) {\n      //pass\n    } else {\n      this.getUserInfo();\n    }\n  }\n\n  getUserInfo(e) {\n    const id = Cookies.get(\"user_id\");\n    axios\n      .get(\"http://127.0.0.1:8000/api/urv/\" + id)\n      .then((res) => {\n        const username = res.data.map((username) => {\n          return username.username;\n        });\n        const id = res.data.map((id) => {\n          return id.id;\n        });\n        const password = res.data.map((password) => {\n          return password.password;\n        });\n        const last_login = res.data.map((last_login) => {\n          return last_login.last_login;\n        });\n        const is_superuser = res.data.map((is_superuser) => {\n          return is_superuser.is_superuser;\n        });\n        const first_name = res.data.map((first_name) => {\n          return first_name.first_name;\n        });\n        const last_name = res.data.map((last_name) => {\n          return last_name.last_name;\n        });\n        const email = res.data.map((email) => {\n          return email.email;\n        });\n        const is_staff = res.data.map((is_staff) => {\n          return is_staff.is_staff;\n        });\n        const is_active = res.data.map((is_active) => {\n          return is_active.is_active;\n        });\n        const date_joined = res.data.map((date_joined) => {\n          return date_joined.date_joined;\n        });\n        Cookies.set(\"username\", username);\n        Cookies.set(\"password\", password);\n        Cookies.set(\"last_login\", last_login);\n        Cookies.set(\"is_superuser\", is_superuser);\n        Cookies.set(\"first_name\", first_name);\n        Cookies.set(\"last_name\", last_name);\n        Cookies.set(\"email\", email);\n        Cookies.set(\"is_staff\", is_staff);\n        Cookies.set(\"is_active\", is_active);\n        Cookies.set(\"date_joined\", date_joined);\n      })\n      .then(() => {\n        localStorage.removeItem(\"user_id\");\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axiosInstance\n      .post(\"/gtv/\", {\n        username: this.state.username,\n        password: this.state.password,\n      })\n      .then((result) => {\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"JWT \" + result.data.access;\n        Cookies.set(\"access_token\", result.data.access);\n        Cookies.set(\"refresh_token\", result.data.refresh, { expires: 15 });\n      })\n      .then(() => {\n        this.getUserId();\n      })\n      .then(() => {})\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        Login\n        <form onSubmit={this.handleSubmit} className=\"login-form\">\n          <label>\n            Username:\n            <input\n              name=\"username\"\n              type=\"text\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              placeholder=\"Enter Username\"\n            />\n          </label>\n          <label>\n            Password:\n            <input\n              name=\"password\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              placeholder=\"Enter Password\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}